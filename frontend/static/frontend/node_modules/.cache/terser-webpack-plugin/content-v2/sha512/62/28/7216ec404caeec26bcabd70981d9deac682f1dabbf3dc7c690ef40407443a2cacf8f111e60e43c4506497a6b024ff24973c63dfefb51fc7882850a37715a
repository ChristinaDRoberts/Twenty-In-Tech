{"map":"{\"version\":3,\"sources\":[\"/Users/admin/Documents/code/tint/frontend/static/src/containers/indivCards.js\",\"/Users/admin/Documents/code/tint/frontend/static/src/containers/App.js\",\"/Users/admin/Documents/code/tint/frontend/static/src/serviceWorker.js\",\"/Users/admin/Documents/code/tint/frontend/static/src/index.js\"],\"names\":[\"CardListContainer\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"cardList\",\"_this2\",\"fetch\",\"then\",\"response\",\"status\",\"console\",\"log\",\"json\",\"toConsumableArray\",\"push\",\"setState\",\"interview\",\"map\",\"card\",\"react_default\",\"a\",\"createElement\",\"key\",\"id\",\"Card\",\"style\",\"width\",\"className\",\"Img\",\"variant\",\"src\",\"img\",\"Body\",\"Title\",\"Text\",\"Button\",\"Component\",\"App\",\"App_HeroHeader\",\"indivCards\",\"HeroHeader\",\"data-letter\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, {Component} from 'react';\\nimport {Button,Card } from 'react-bootstrap';\\nimport '../App.css';\\n// const $ = window.$;\\n\\n\\n\\n\\n\\nclass CardListContainer extends Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            cardList : []\\n        }\\n    };\\n\\n\\n    componentDidMount() {\\n        fetch('/api/interview/').then((response) => {\\n            if (response.status !== 200) {\\n                console.log(\\\"problem\\\")\\n            }\\n\\n            return response.json();\\n        }).then(json => {\\n            let cardList = [...this.state.cardList];\\n            cardList.push(json);\\n            console.log('json', json);\\n            this.setState({cardList: json});\\n            //this is working, still getting a map of undefined\\n\\n        });\\n\\n    }\\n\\n    render() {\\n         let interview = this.state.cardList.map((card) => {\\n            return (\\n                <li key={card.id}>\\n                <Card style={{width: '18rem'}} className=\\\"card-main\\\">\\n                <Card.Img variant=\\\"top\\\" className=\\\"card-image\\\" src={card.img}/>\\n                <Card.Body>\\n                    <Card.Title>Name of Subject {card.id} </Card.Title>\\n                    <Card.Text>\\n                        A short synopse of interview. Grab attention here\\n                    </Card.Text>\\n                    <Button variant=\\\"secondary\\\" className=\\\"btn-secondary interv-button\\\">Read The Interview</Button>\\n                </Card.Body>\\n            </Card>\\n                </li>\\n            )\\n        });\\n\\n\\n        return (\\n         <ul>{interview}</ul>\\n        )\\n    }\\n}\\n\\nexport default CardListContainer\\n\\n\\nclass IndivCardContainer extends Component {\\n        constructor(props){\\n            super(props);\\n        }\\n\\n    render() {\\n\\n        return (\\n            <div>\\n\\n                {/*<ul>{interview}</ul>*/}\\n                hello\\n\\n            </div>\\n    )\\n        ;\\n    }\\n}\\n\\n\\n\\n\",\"import React, {Component} from 'react';\\n\\nimport CardListContainer from './indivCards'\\nimport {Container} from 'react-bootstrap';\\n\\nimport '../App.css';\\n\\nclass App extends Component {\\n    render() {\\n        return (\\n\\n            <div className=\\\"App\\\">\\n                <HeroHeader/>\\n                <CardListContainer/>\\n\\n\\n            </div>\\n\\n        );\\n    }\\n}\\n\\nexport default App;\\n\\n\\nclass HeroHeader extends Component {\\n    render() {\\n        return (\\n            <div>\\n                {/*https://codepen.io/diegopardo/pen/GqEho*/}\\n                <div className=\\\"TinT\\\">\\n                    <div className=\\\"Twenty head\\\">\\n                        <span className=\\\"letter\\\" data-letter=\\\"T\\\">T</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"W\\\">W</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"E\\\">E</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"N\\\">N</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"T\\\">T</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"Y\\\">Y</span>\\n                    </div>\\n                    <div className=\\\"in head\\\">\\n                        <span className=\\\"letter\\\" data-letter=\\\"\\\"></span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"I\\\">I</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"N\\\">N</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"\\\"></span>\\n\\n                    </div>\\n\\n                    <div className=\\\"Tech head\\\">\\n                        <span className=\\\"letter\\\" data-letter=\\\"T\\\">T</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"E\\\">E</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"C\\\">C</span>\\n                        <span className=\\\"letter\\\" data-letter=\\\"H\\\">H</span>\\n                    </div>\\n             </div>\\n\\n        {/*end of codepen*/\\n        }\\n    </div>\\n\\n    )\\n    }\\n}\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,t,a){},18:function(e,t,a){e.exports=a(25)},24:function(e,t,a){},25:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),l=a(13),c=a.n(l),s=(a(24),a(5)),o=a(6),i=a(8),m=a(7),u=a(9),d=a(16),p=a(26),E=a(27),h=(a(12),function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(i.a)(this,Object(m.a)(t).call(this,e))).state={cardList:[]},a}return Object(u.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"/api/interview/\").then(function(e){return 200!==e.status&&console.log(\"problem\"),e.json()}).then(function(t){Object(d.a)(e.state.cardList).push(t),console.log(\"json\",t),e.setState({cardList:t})})}},{key:\"render\",value:function(){var e=this.state.cardList.map(function(e){return r.a.createElement(\"li\",{key:e.id},r.a.createElement(p.a,{style:{width:\"18rem\"},className:\"card-main\"},r.a.createElement(p.a.Img,{variant:\"top\",className:\"card-image\",src:e.img}),r.a.createElement(p.a.Body,null,r.a.createElement(p.a.Title,null,\"Name of Subject \",e.id,\" \"),r.a.createElement(p.a.Text,null,\"A short synopse of interview. Grab attention here\"),r.a.createElement(E.a,{variant:\"secondary\",className:\"btn-secondary interv-button\"},\"Read The Interview\"))))});return r.a.createElement(\"ul\",null,e)}}]),t}(n.Component)),N=(n.Component,function(e){function t(){return Object(s.a)(this,t),Object(i.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(v,null),r.a.createElement(h,null))}}]),t}(n.Component)),v=function(e){function t(){return Object(s.a)(this,t),Object(i.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(o.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"TinT\"},r.a.createElement(\"div\",{className:\"Twenty head\"},r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"T\"},\"T\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"W\"},\"W\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"E\"},\"E\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"N\"},\"N\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"T\"},\"T\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"Y\"},\"Y\")),r.a.createElement(\"div\",{className:\"in head\"},r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"\"}),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"I\"},\"I\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"N\"},\"N\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"\"})),r.a.createElement(\"div\",{className:\"Tech head\"},r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"T\"},\"T\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"E\"},\"E\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"C\"},\"C\"),r.a.createElement(\"span\",{className:\"letter\",\"data-letter\":\"H\"},\"H\"))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(N,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[18,1,2]]]);","extractedComments":[]}